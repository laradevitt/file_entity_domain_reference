<?php

/**
 * Implements hook_install().
 *
 * By default Drupal assumes we won't need to run existing updates so we
 * need to tell it to do so by resetting schema version to '0'. It's possible
 * I could just include the update code in the install() function and everything
 * would just work but I'd rather make it a separate, deliberate action.
 */
function file_entity_domain_reference_image_install() {
  drupal_set_installed_schema_version('file_entity_domain_reference_image', '0');
}

/**
 * Update file entities with domain reference info.
 *
 * In order to be able to filter files by domain, we have to populate the new
 * field with this information. This function updates all existing file entities
 * from the 'image' bundle with this info.
 */
function file_entity_domain_reference_image_update_7000(&$sandbox) {
  module_load_include('module', 'file_entity_domain_reference');

  $type = 'image';
  $field_name = 'field_file_domain';

  // Look up file entities from file_managed table where type = $type and record
  // has no entry in field_data_ table.
  $query = db_select('file_managed', 'fm');
  $query->leftjoin('field_data_' . $field_name, 'fd', 'fm.fid = fd.entity_id');
  $query->fields('fm', array('fid', 'uid', 'type'));
  $query->isNull('fd.' . $field_name . '_domain');
  $query->condition('type', $type);
  $files = $query->execute();

  if (!isset($sandbox['progress'])) {
    $sandbox['progress'] = 0;
    $sandbox['max'] = $files->rowCount();
    $sandbox['messages'] = array();
    $sandbox['current_file'] = -1;
    $sandbox['inserted'] = 0;
  }

  // Alter the query to get next set of file entities.
  $query = $query->extend('PagerDefault');
  $query->limit(25);
  $query->orderBy('fm.fid', 'ASC');
  $query->where('fm.fid > :fid', array(':fid' => $sandbox['current_file']));
  $result = $query->execute();

  foreach ($result as $row) {
    file_entity_domain_reference_update_file_entities($sandbox, $row);
    $sandbox['progress']++;
    $sandbox['current_file'] = $row->fid;
  }

  $sandbox['#finished'] = ($sandbox['progress'] >= $sandbox['max']) ? TRUE : ($sandbox['progress'] / $sandbox['max']);

  $sandbox_status = $sandbox;
  unset($sandbox_status['messages']);
  $sandbox['messages'][] = t('$sandbox=') . print_r($sandbox_status, TRUE);

  if ($sandbox['#finished']) {
    $final_message = "\n" . implode("\n", $sandbox['messages']);
    return t('%processed file entities processed and %updated file entities updated with domain info. Message: @message', array('%processed' => $sandbox['progress'], '%updated' => $sandbox['inserted'], '@message' => $final_message));
  }
}

